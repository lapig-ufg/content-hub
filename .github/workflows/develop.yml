name: Build and Deploy in Homology Server

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Define a variável application_name
        run: |
          repo_full_name=$GITHUB_REPOSITORY
          repo_name=${repo_full_name##*/}
          echo "Nome do repositório: $repo_name"
          echo "application_name=$repo_name" >> $GITHUB_ENV
          echo "LAST_COMMIT_HASH=$(git log --pretty=format:%h -n 1)" >> $GITHUB_ENV

      - name: Create version.json
        run: echo '{"commitId":"$LAST_COMMIT_HASH"}' > version.json

      - name: Determine branch
        id: get_branch
        run: echo "::set-output name=branch::${GITHUB_REF##*/}"

      - name: Validate and Build
        run: |
          git pull origin develop
          docker build -t ${{secrets.REGISTRYHOMOL}}/$application_name:${LAST_COMMIT_HASH} -t ${{secrets.REGISTRYHOMOL}}/$application_name:latest  -f docker/homologation/Dockerfile . --no-cache
          

      - name: Login to Docker Registry
        run: echo "${{ secrets.HARBOR_PASS }}" | docker login -u "${{ secrets.HARBOR_USER }}" --password-stdin "${{ secrets.URL_PRIVATE_REGISTRY }}"

      - name: Push Image to Registry
        run: |
          docker push ${{secrets.REGISTRYHOMOL}}/$application_name:${LAST_COMMIT_HASH}
          docker push ${{secrets.REGISTRYHOMOL}}/$application_name:latest

      - name: Remove image locally
        run: |
            docker rmi ${{secrets.REGISTRYHOMOL}}/$application_name:${LAST_COMMIT_HASH}
            docker rmi ${{secrets.REGISTRYHOMOL}}/$application_name:latest
          

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{secrets.SERVER_HOMOL_SSH}} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Pull Image on Server
        run: |
            ssh ${{secrets.SERVER_HOMOL_SSH}} "docker pull ${{secrets.REGISTRYHOMOL}}/$application_name:latest"
          

      - name: Deploy Container
        run: |
          
          delete_status=$(ssh ${{secrets.SERVER_HOMOL_SSH}} "curl -v -X DELETE -w '%{http_code}' http://${{secrets.SERVER_HOMOL}}/containers/$application_name?force=true")
          echo "Delete Status: $delete_status"
          
          create_status=$(ssh ${{secrets.SERVER_HOMOL_SSH}} "curl -v -X POST -H 'Content-Type: application/json' -d @- -s -w '%{http_code}' http://${{secrets.SERVER_HOMOL}}/containers/create?name=$application_name" <<< '${{ vars.HOMOL_DOCKER_CONFIG }}')
          echo "Create Status: $create_status"

      - name: Start Container
        run: |
          start_status=$(ssh ${{secrets.SERVER_HOMOL_SSH}} "curl -v -X POST -s -w '%{http_code}' http://${{secrets.SERVER_HOMOL}}/containers/$application_name/start")
          echo "Start Status: $start_status"

      - name: Send message to Telegram
        run: |
          # Your Telegram notification code here

      - name: Send message to Discord
        run: |
          # Your Discord notification code here

